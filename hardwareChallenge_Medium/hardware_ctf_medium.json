[
  {
    "name": "Debug Interface Dump Challenge",
    "category": "EEPROM Extraction",
    "description": "We got access to a memory dump through a debug interface. Somewhere in it lies a secret...",
    "value": 297,
    "max_attempts": 5,
    "type": "standard",
    "state": "visible",
    "flags": [
      {
        "type": "static",
        "content": "FLAG{dffbaa68efce88}"
      }
    ],
    "files": [
      {
        "name": "debug_memory.bin",
        "content": "RkxBR3tkZmZiYWE2OGVmY2U4OH0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
        "type": "application/octet-stream",
        "encoding": "base64"
      }
    ],
    "hints": [
      {
        "content": "Try strings or hexdump to begin with.",
        "cost": 75
      }
    ],
    "requirements": null
  },
  {
    "name": "Debug Interface Dump Challenge",
    "category": "UART Debugging",
    "description": "We got access to a memory dump through a debug interface. Somewhere in it lies a secret...",
    "value": 284,
    "max_attempts": 5,
    "type": "standard",
    "state": "visible",
    "flags": [
      {
        "type": "static",
        "content": "FLAG{e1694b8df872b2}"
      }
    ],
    "files": [
      {
        "name": "debug_memory.bin",
        "content": "RkxBR3tlMTY5NGI4ZGY4NzJiMn0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
        "type": "application/octet-stream",
        "encoding": "base64"
      }
    ],
    "hints": [],
    "requirements": null
  },
  {
    "name": "Simple Firmware Disassembly Challenge",
    "category": "EEPROM Extraction",
    "description": "A simple firmware was dumped from the flash memory. Try to reverse it and extract the flag.",
    "value": 275,
    "max_attempts": 5,
    "type": "standard",
    "state": "visible",
    "flags": [
      {
        "type": "static",
        "content": "FLAG{7f251e9cdfb24b}"
      }
    ],
    "files": [
      {
        "name": "firmware_dump.bin",
        "content": "Qk9PVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTEFHezdmMjUxZTljZGZiMjRiff////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8=",
        "type": "application/octet-stream",
        "encoding": "base64"
      }
    ],
    "hints": [
      {
        "content": "Try strings or hexdump to begin with.",
        "cost": 75
      }
    ],
    "requirements": null
  },
  {
    "name": "Simple Firmware Disassembly Challenge",
    "category": "PCB Reverse Engineering",
    "description": "A simple firmware was dumped from the flash memory. Try to reverse it and extract the flag.",
    "value": 294,
    "max_attempts": 5,
    "type": "standard",
    "state": "visible",
    "flags": [
      {
        "type": "static",
        "content": "CTF{cf0fc6d8085157}"
      }
    ],
    "files": [
      {
        "name": "firmware_dump.bin",
        "content": "Qk9PVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDVEZ7Y2YwZmM2ZDgwODUxNTd9/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////w==",
        "type": "application/octet-stream",
        "encoding": "base64"
      }
    ],
    "hints": [
      {
        "content": "Try strings or hexdump to begin with.",
        "cost": 75
      }
    ],
    "requirements": null
  },
  {
    "name": "Signal Monitoring Challenge",
    "category": "UART Debugging",
    "description": "We captured signal data during an operation. Can you interpret the trace and recover the flag?",
    "value": 222,
    "max_attempts": 5,
    "type": "standard",
    "state": "visible",
    "flags": [
      {
        "type": "static",
        "content": "CTF{7a887963ce7778}"
      }
    ],
    "files": [
      {
        "name": "signal_trace.json",
        "content": "[191, 28, 29, 120, 143, 86, 187, 69, 228, 178, 131, 238, 16, 22, 173, 34, 98, 121, 253, 73, 172, 47, 94, 160, 67, 5, 197, 203, 185, 105, 152, 125, 152, 34, 34, 19, 17, 97, 218, 156, 60, 199, 144, 1, 76, 184, 197, 155, 195, 75, 148, 211, 180, 207, 120, 40, 243, 245, 188, 8, 4, 252, 218, 58, 226, 205, 154, 137, 49, 192, 125, 100, 186, 211, 166, 236, 92, 74, 254, 102, 191, 157, 94, 101, 146, 217, 231, 182, 229, 201, 143, 158, 92, 21, 196, 72, 99, 20, 155, 61, 21, 149, 197, 212, 158, 37, 54, 140, 58, 137, 140, 155, 79, 207, 207, 181, 53, 183, 147, 181, 205, 210, 37, 250, 53, 14, 144, 226, 185, 137, 73, 142, 45, 137, 64, 40, 69, 221, 73, 30, 96, 253, 24, 193, 129, 210, 3, 70, 177, 150, 103, 4, 186, 145, 49, 149, 12, 91, 129, 235, 84, 248, 70, 108, 102, 31, 161, 142, 210, 239, 189, 2, 187, 38, 68, 70, 248, 54, 45, 212, 243, 0, 2, 184, 190, 39, 57, 221, 200, 111, 243, 105, 86, 68, 239, 161, 51, 57, 28, 164, 25, 94, 169, 63, 15, 234, 31, 241, 211, 150, 196, 170, 223, 54, 51, 223, 4, 66, 78, 218, 155, 246, 145, 137, 72, 68, 41, 221, 132, 21, 213, 201, 108, 94, 240, 193, 33, 220, 171, 136, 56, 118, 14, 127, 167, 102, 71, 23, 181, 36, 58, 61, 139, 245, 68, 188, 1, 58, 14, 220, 223, 159, 55, 108, 117, 248, 246, 57, 123, 76, 36, 0, 255, 185, 35, 28, 176, 158, 183, 244, 128, 219, 180, 119, 225, 211, 235, 142, 53, 63, 16, 172, 152, 19, 23, 154, 2, 189, 99, 42]",
        "type": "application/json"
      }
    ],
    "hints": [
      {
        "content": "Try strings or hexdump to begin with.",
        "cost": 75
      }
    ],
    "requirements": null
  }
]